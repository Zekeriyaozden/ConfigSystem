@model IEnumerable<Config.Abstractions.ConfigItem>
@{
    ViewData["Title"] = "Configurations";
    var app = (string?)ViewBag.App;
    bool isActive = (bool?)ViewBag.Active == true;
}

<h2>Configurations</h2>

<form method="get" class="mb-3">
    <label>Application:</label>
    <input type="text" name="app" value="@app" />
    <button type="submit" class="btn btn-primary ms-2">Filter</button>
    <a class="btn btn-success ms-2" asp-action="Create">New</a>
</form>

<input id="q" class="form-control mb-2" placeholder="Quick filter by Key..." oninput="filterRows()" />

<table id="tbl" class="table table-sm table-striped">
    <thead>
        <tr>
            <th>Id</th>
            <th>Application</th>
            <th>Name</th>
            <th>Type</th>
            <th>Value</th>
            <th>Active</th>
            <th>LastUpdated</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var x in Model)
        {
            <tr>
                <td>@x.Id</td>
                <td>@x.ApplicationName</td>
                <td class="key">@x.Name</td>
                <td>@x.Type</td>
                <td>@x.Value</td>
                <td>@x.IsActive</td>
                <td>@x.LastUpdatedUtc.ToString("u")</td>
                <td class="text-nowrap">
                    <a class="btn btn-sm btn-outline-primary" asp-action="Edit" asp-route-id="@x.Id">Edit</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    function filterRows(){
      const q = document.getElementById('q').value.toLowerCase();
      document.querySelectorAll('#tbl tbody tr').forEach(tr=>{
        const key = (tr.querySelector('.key')?.textContent || '').toLowerCase();
        tr.style.display = key.includes(q) ? '' : 'none';
      });
    }
</script>
